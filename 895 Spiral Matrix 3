class Solution {
    public int[][] spiralMatrixIII(int rows, int cols, int rStart, int cStart) {
        int [][] direction={
            {0,1}, //right
            {1,0},//down
            {0,-1},//left
            {-1,0}//up
        };

        //to return ans array
        int [][]ans=new int [rows*cols][2];

        //initailizr ans array 
        //they have given us first two indexes
        ans[0][0]=rStart;
        ans[0][1]=cStart;

        //count integer for adding new ans to array 
        int count=1;

        //steps integer for in that direction, firstly take 1 step in right direction
        // after every two steps increment steps
        int steps=1;

        //index integer to fetch values from direction array to add in rStart and cStart
        int index=0;

        while(count< rows* cols){
            //loop every 2 times and after increment steps
            for(int times=0;times<2;times++){
                //get the vaues for x and y coordinates from direction array
                int dirOfRow=direction[index%4][0];//value of row to add
                int dirOfCol=direction[index%4][1];//value of co to add

                //at first iteration it will run for 1 time
                for(int a=0;a<steps;a++){
                    //add the values from direction array which we have fetched
                    rStart+= dirOfRow;
                    cStart+= dirOfCol;

                    //check the condition
                    if (rStart>=0 && rStart<rows && cStart>=0 && cStart<cols){
                        //add to  ans array
                        //count is initially to 1 because we have
                        //added value to the 0 index of ans array
                        ans[count][0]=rStart;
                        ans[count][1]=cStart;

                        //increment the count pointer
                        count++;
                    }
                }
                index++;
            }
            steps++;
        }
        return ans;

    }
}
